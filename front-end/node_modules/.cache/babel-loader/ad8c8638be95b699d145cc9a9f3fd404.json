{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport loginApi from '../../api/loginApi';\nconst initialState = {\n  currentUser: null,\n  status: 'idle',\n  error: null\n};\nexport const fetchLogin = createAsyncThunk('auth/fetchLogin', async data => {\n  const response = await loginApi(data);\n  return response;\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchLogin.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchLogin.fulfilled, (state, action) => {\n      state.status = 'succeeded'; // Add any fetched posts to the array\n\n      state.currentUser = action.payload;\n    }).addCase(fetchLogin.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginApi","initialState","currentUser","status","error","fetchLogin","data","response","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","message","reducer"],"sources":["/home/vuphan/Projects/containers/front-end/src/freatures/auth/authSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit';\nimport loginApi from '../../api/loginApi';\n\nconst initialState = {\n \n  currentUser: null,\n  status: 'idle',\n  error: null\n}\n\nexport const fetchLogin = createAsyncThunk('auth/fetchLogin', async (data) => {\n\n  const response = await loginApi(data);\n  return response\n})\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n   \n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchLogin.pending, (state, action) => {\n        state.status = 'loading'\n      })\n      .addCase(fetchLogin.fulfilled, (state, action) => {\n        state.status = 'succeeded'\n        // Add any fetched posts to the array\n        state.currentUser = action.payload\n      })\n      .addCase(fetchLogin.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n      })\n  }\n})\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,YAAY,GAAG;EAEnBC,WAAW,EAAE,IAFM;EAGnBC,MAAM,EAAE,MAHW;EAInBC,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,iBAAD,EAAoB,MAAOO,IAAP,IAAgB;EAE5E,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACM,IAAD,CAA/B;EACA,OAAOC,QAAP;AACD,CAJyC,CAAnC;AAMP,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MADsB;EAE5BR,YAF4B;EAG5BS,QAAQ,EAAE,EAHkB;;EAM5BC,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWR,UAAU,CAACS,OADtB,EAC+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9CD,KAAK,CAACZ,MAAN,GAAe,SAAf;IACD,CAHH,EAIGU,OAJH,CAIWR,UAAU,CAACY,SAJtB,EAIiC,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAChDD,KAAK,CAACZ,MAAN,GAAe,WAAf,CADgD,CAEhD;;MACAY,KAAK,CAACb,WAAN,GAAoBc,MAAM,CAACE,OAA3B;IACD,CARH,EASGL,OATH,CASWR,UAAU,CAACc,QATtB,EASgC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC/CD,KAAK,CAACZ,MAAN,GAAe,QAAf;MACAY,KAAK,CAACX,KAAN,GAAcY,MAAM,CAACZ,KAAP,CAAagB,OAA3B;IACD,CAZH;EAaD;;AApB2B,CAAD,CAA7B;AAuBA,eAAeZ,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}